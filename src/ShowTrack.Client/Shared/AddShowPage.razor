@using ShowTrack.Contracts.Dtos

@inject DialogService DialogService

<div>
    <RadzenTemplateForm TItem="CreateShowDto" Data="NewShow" Submit="() => DialogService.Close(NewShow)">
        <RadzenRow Gap="10">
            <RadzenColumn Size="12" SizeSM="10">
                <RadzenFormField Text="Title" Style="width: 100%;">
                    <RadzenTextBox Name="ShowTitle" @bind-Value="@NewShow.Title" Style="width: 100%;" />
                </RadzenFormField>
                <RadzenRequiredValidator Component="ShowTitle" Text="Title is required." />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeSM="2">
                <RadzenFormField Text="Season" Style="width: 100%;">
                    <RadzenNumeric Min="1" Name="ShowSeason" TValue="int?" ShowUpDown="false" @bind-Value="@NewShow.CurrentSeason" Style="width: 100%;" />
                </RadzenFormField>
                <RadzenCustomValidator Text="@seasonValidatorText" Component="ShowSeason" Validator="ValidateSeason"></RadzenCustomValidator>
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow RowGap="15" Gap="5">
            <RadzenColumn Size="12" />
            <RadzenColumn Offset="8" Size="4" OffsetSM="10" SizeSM="2">
                <RadzenButton ButtonStyle="ButtonStyle.Success" ButtonType="ButtonType.Submit" Text="Add" Style="width:100%" />
            </RadzenColumn>
        </RadzenRow>
    </RadzenTemplateForm>
</div>

@code {
    private string seasonValidatorText = string.Empty;
    private CreateShowDto NewShow { get; } = CreateShowDto.New();

    private bool ValidateSeason()
    {
        switch (NewShow.CurrentSeason)
        {
            case > 0:
                return true;
            case null:
                seasonValidatorText = "Season is required.";
                break;
            default:
                seasonValidatorText = "Invalid season!";
                break;
        }
        
        return false;
    }

}
