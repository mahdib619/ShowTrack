@page "/"

@using ShowTrack.Contracts.Dtos
@using ShowTrack.Client.Services
@using System.Globalization

@inject IShowsService ShowsService
@inject DialogService DialogService

<PageTitle>Home</PageTitle>

<div style="margin-top:10px">
    <RadzenRow Style="padding-right:18px">
        <RadzenColumn Size="4" Offset="8" OffsetLG="11" SizeLG="1">
            <RadzenButton ButtonStyle="ButtonStyle.Success" Text="New Show" Style="width:100%" Click="AddShow" />
        </RadzenColumn>
    </RadzenRow>
    <RadzenDataList Style="border-bottom:0" Data="@_shows" Count="@_showsCount" TItem="ReadShowDto" PageSize="5" PagerHorizontalAlign="HorizontalAlign.Left">
        <Template Context="show">
            <RadzenCard Style="width: 100%; padding: 0;">
                <RadzenRow Gap="0">
                    <RadzenColumn Size="12" SizeLG="2" Class="rz-p-4 show-title">
                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="rz-color-secondary">@(show.Title)</RadzenText>
                    </RadzenColumn>

                    <RadzenColumn Size="12" SizeLG="8" Class="rz-p-4">
                        <RadzenRow Gap="0">
                            <RadzenColumn Size="12" SizeMD="6" SizeLG="1" Style="padding-right:80px">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">Season</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body2">@(show.CurrentSeason)</RadzenText>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="6" SizeLG="3">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">Next Season On</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body2">@(show.Schedule?.ReleaseDate.ToString("yyyy-MM-dd", new CultureInfo("en-us")) ?? "-")</RadzenText>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="6" SizeLG="4">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">State</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body2">@(show.IsEnded ? "ended" : "on-going")</RadzenText>
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeLG="2" Class="rz-p-4">
                        <RadzenButton Text="Schedule" Style="width: 100%" Click="()=>AddSchedule(show)" />
                    </RadzenColumn>
                </RadzenRow>
            </RadzenCard>
        </Template>
    </RadzenDataList>
</div>

@code
{
    private IList<ReadShowDto>? _shows;
    private int _showsCount => _shows?.Count ?? 0;

    protected override async Task OnInitializedAsync()
    {
        _shows = (await ShowsService.GetAllShows())?.Reverse().ToList();
    }

    private async Task AddShow()
    {
        CreateShowDto? newShow = await DialogService.OpenAsync<AddShowPage>("New Show", null, new() { ShowClose = false, CloseDialogOnOverlayClick = true });

        if (newShow is null)
            return;

        var result = await ShowsService.CreateShow(newShow);

        _shows!.Add(result);
    }

    private async Task AddSchedule(ReadShowDto show)
    {
        UpdateShowScheduleDto? newSchedule = await DialogService.OpenAsync<AddSchedulePage>("Update Schedule",
                                                                                             new() { ["Show"] = show },
                                                                                             new() { ShowClose = false, CloseDialogOnOverlayClick = true });

        if (newSchedule is null)
            return;

        await ShowsService.CreateOrUpdateShowSchedule(newSchedule);

        show.Schedule = (await ShowsService.GetSingleShow(show.Id))?.Schedule;
    }
}
